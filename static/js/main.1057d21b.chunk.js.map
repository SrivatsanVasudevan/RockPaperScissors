{"version":3,"sources":["components/gameresult/gameresult.jsx","components/players/players.jsx","components/footer/footer.jsx","components/game/game.jsx","components/heading/heading.jsx","App.js","reportWebVitals.js","index.js"],"names":["Result","userInput","computerInput","wins","loss","draw","className","style","margin","Player","player","computer","rock","paper","scissors","playerURL","computerURL","backgroundColor","src","alt","Footer","Game","updateInputs","event","moves","opponentMove","Math","floor","random","length","setState","target","value","showPlayers","madeSelection","playerBackground","computerBackground","checkWinner","state","console","log","winCount","lossCount","drawCount","user","this","type","onClick","marginTop","React","Component","Heading","fontSize","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6VAgBeA,EAbA,SAAC,GAA8C,EAA7CC,UAA6C,EAAlCC,cAAmC,IAArBC,EAAoB,EAApBA,KAAKC,EAAe,EAAfA,KAAKC,EAAU,EAAVA,KAC5C,OACI,mCACD,sBAAKC,UAAY,UAAjB,UACK,sBAAKC,MAAS,CAACC,OAAO,IAAtB,oBAAmCL,KACnC,sBAAKI,MAAS,CAACC,OAAO,IAAtB,sBAAqCJ,KACrC,sBAAKG,MAAS,CAACC,OAAO,IAAtB,qBAAoCH,WC8BrCI,G,MApCA,SAAC,GAA+C,IAA9CR,EAA6C,EAA7CA,UAAUC,EAAmC,EAAnCA,cAAcQ,EAAqB,EAArBA,OAAOC,EAAc,EAAdA,SACtCC,EAAO,wEACPC,EAAQ,iEACRC,EAAW,+EAEbC,EAAY,GAAIC,EAAc,GAoBlC,OAlBID,EADa,SAAdd,EACaW,EAEM,UAAdX,EACQY,EAGAC,EAGZE,EADiB,SAAlBd,EACeU,EAEQ,UAAlBV,EACUW,EAGAC,EAMd,gCACI,uBAAMR,UAAY,UAAlB,cAA6B,qBAAKC,MAAS,CAACU,gBAAgBP,GAASJ,UAAY,QAAQY,IAAOH,EAAWI,IAAOlB,IAAlH,OACA,uBAAMK,UAAY,UAAlB,cAA6B,qBAAKA,UAAY,QAAQY,IA1B/C,8LA0B8DC,IAAM,OAA3E,OACA,uBAAMb,UAAY,UAAlB,cAA6B,qBAAKC,MAAS,CAACU,gBAAgBN,GAAWL,UAAY,QAAQY,IAAOF,EAAaG,IAAOjB,IAAtH,YClBGkB,G,MAbA,SAAC,GAA2B,IAA1BR,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SACxB,OACI,sBAAKR,UAAY,SAAjB,sBACa,qBAAKA,UAAU,eAAeY,IAAON,EAAMO,IAAM,SAD9D,SAEI,qBAAKb,UAAU,eAAeY,IAAOJ,EAAUK,IAAM,aAFzD,IAGI,qBAAKb,UAAU,eAAeY,IAAOJ,EAAUK,IAAM,aAHzD,SAII,qBAAKb,UAAU,eAAeY,IAAOL,EAAOM,IAAM,UAJtD,OAKI,qBAAKb,UAAU,eAAeY,IAAOL,EAAOM,IAAM,UALtD,SAMI,qBAAKb,UAAU,eAAeY,IAAON,EAAMO,IAAM,SANrD,SCoMOE,G,wDAlMX,aAAc,IAAD,8BACT,gBAmBJC,aAAe,SAACC,GACZ,IAAMC,EAAQ,CAAC,OAAO,QAAQ,YACxBC,EAAeD,EAAME,KAAKC,MAAMD,KAAKE,SAASJ,EAAMK,SAC1D,EAAKC,SAAS,CAAC7B,UAAUsB,EAAMQ,OAAOC,MAAM9B,cAAcuB,EAAaQ,aAAY,EAC/EC,eAAc,EAAMC,iBAAiB,GAAGC,mBAAmB,MAxBtD,EA2BbC,YAAc,WAEV,EAAKP,SAAS,CAACG,aAAY,IAFX,MAGmB,EAAKK,MAAjCrC,EAHS,EAGTA,UAAWC,EAHF,EAGEA,cAClBqC,QAAQC,IAAIvC,EAAY,IAAMC,GAJd,MAKuB,EAAKoC,MAAvCG,EALW,EAKXA,SAAUC,EALC,EAKDA,UAAWC,EALV,EAKUA,UAIT,SAAd1C,GAA0C,aAAlBC,IACvBqC,QAAQC,IAAI,QACZC,IACA,EAAKX,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,cACxDC,mBAAoB,SAGX,aAAdnC,GAA8C,UAAlBC,IAC3BqC,QAAQC,IAAI,QACZC,IACA,EAAKX,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,cACxDC,mBAAoB,SAGX,UAAdnC,GAA2C,SAAlBC,IACxBqC,QAAQC,IAAI,QACZC,IACA,EAAKX,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,cACxDC,mBAAoB,SAIX,SAAdnC,GAA0C,UAAlBC,IACvBqC,QAAQC,IAAI,QACZE,IACA,EAAKZ,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,MACxDC,mBAAoB,iBAGX,UAAdnC,GAA2C,aAAlBC,IACxBqC,QAAQC,IAAI,QACZE,IACA,EAAKZ,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,MACxDC,mBAAoB,iBAGX,aAAdnC,GAA8C,SAAlBC,IAC3BqC,QAAQC,IAAI,QACZE,IACA,EAAKZ,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,MACxDC,mBAAoB,iBAIzBnC,IAAcC,IAEbyC,IACAJ,QAAQC,IAAI,SAAWG,GACvB,EAAKb,SACD,CAACW,SAAUA,EACXC,UAAWA,EACXC,UAAUA,EACVxC,KAAKsC,EACLrC,KAAKsC,EACLrC,KAAKsC,EACLC,KAAK3C,EAAUU,SAAST,EAAeiC,iBAAiB,SACxDC,mBAAoB,YAG5B,EAAKN,SAAS,CAACc,KAAK3C,EAAUU,SAAST,EAAcgC,eAAc,IACnEK,QAAQC,IAAI,EAAKF,MAAMG,SAAW,IAAM,EAAKH,MAAMI,UAAY,IAAM,EAAKJ,MAAMK,YAxIhF,EAAKL,MAAQ,CACTG,SAAU,EACVC,UAAW,EACXC,UAAW,EACXxC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNH,cAAe,GACfD,UAAW,GACX2C,KAAM,GACNjC,SAAU,GACVsB,aAAa,EACbC,eAAc,EACdC,iBAAmB,GACnBC,mBAAoB,IAhBf,E,0CA8Ib,WAAS,IAAD,EAEoCS,KAAKP,MADtCrC,EADH,EACGA,UAAW2C,EADd,EACcA,KAAMjC,EADpB,EACoBA,SAAUR,EAD9B,EAC8BA,KAAKC,EADnC,EACmCA,KAAKC,EADxC,EACwCA,KAAK4B,EAD7C,EAC6CA,YAAYC,EADzD,EACyDA,cAC7DC,EAFI,EAEJA,iBAAkBC,EAFd,EAEcA,mBAIlB,OAEI,gCACI,gCAGA,uBAAOU,KAAO,QACdvC,MAAS,CAACU,gBAA8B,SAAdhB,EAAuB,OAAS,IAC1DiB,IAAO,wEAAyEC,IAAM,OAAOb,UAAY,UAAU0B,MAAQ,OAAOe,QAAWF,KAAKvB,eAGlJ,uBAAOwB,KAAO,QACdvC,MAAS,CAACU,gBAA8B,UAAdhB,EAAwB,OAAS,IAC3DiB,IAAG,iEAAsEC,IAAM,QAAQb,UAAY,UAAU0B,MAAQ,QAAQe,QAAWF,KAAKvB,eAC7I,uBAAOwB,KAAO,QACdvC,MAAS,CAACU,gBAA8B,aAAdhB,EAA2B,OAAS,IAC9DiB,IAAG,+EAAoFC,IAAM,WAAWb,UAAY,UAAU0B,MAAQ,WAAWe,QAAWF,KAAKvB,kBAEjK,8BACCY,EAAc,uBAAOY,KAAO,QAAQ5B,IAAG,0DAA+DC,IAAM,MAAMb,UAAY,UAAU0B,MAAQ,WAAWe,QAAWF,KAAKR,cAAiB,OAG7L,8BACCJ,EAAc,cAAC,EAAD,CAAQhC,UAAa2C,EAAM1C,cAAiBS,EAC3DD,OAAUyB,EAAkBxB,SAAYyB,IACpC,OAGJ,8BACA,cAAC,EAAD,CACAjC,KAAQA,EACRC,KAAQA,EACRC,KAAQA,MAGT,qBAAKE,MAAS0B,GAAeC,EAAc,CAACc,UAAU,IAAI,CAACA,UAAU,KAArE,SACA,cAAC,EAAD,CAAQpC,KAvCF,wEAuCgBC,MAtCf,iEAsC+BC,SArC5B,0F,GApJNmC,IAAMC,YCQVC,G,MAXC,WAChB,OACI,sBAAK7C,UAAY,QAAjB,UACI,sBAAMC,MAAS,CAAC6C,SAAS,GAAIC,MAAM,QAAnC,oCACA,qBAAK9C,MAAS,CAACC,OAAO,IAAtB,oG,MCMO8C,MATf,WACE,OACE,sBAAKhD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1057d21b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './gameresult.scss';\r\n\r\nconst Result = ({userInput, computerInput,wins,loss,draw}) => {\r\n        return(\r\n            <>\r\n           <div className = 'results'>  \r\n                <div style = {{margin:20}}> WINS: {wins}</div>\r\n                <div style = {{margin:20}}> LOSSES: {loss}</div>\r\n                <div style = {{margin:20}}> DRAWS: {draw}</div>\r\n           </div>\r\n                \r\n            </>\r\n        )\r\n}\r\n\r\nexport default Result;","import React from 'react';\r\nimport './players.scss';\r\n\r\nconst Player = ({userInput,computerInput,player,computer}) => {\r\n    const rock = 'https://cdn130.picsart.com/288074322023201.png?type=webp&to=min&r=640';\r\n    const paper = 'http://assets.stickpng.com/images/580b585b2edbce24c47b2463.png';\r\n    const scissors = 'https://i.pinimg.com/originals/fa/d9/88/fad988caff49e215acccaf3f753a334f.png';\r\n    const versus = 'https://media.istockphoto.com/vectors/versus-letters-or-vs-logo-comic-text-in-pop-art-style-vector-id853075280?k=6&m=853075280&s=170667a&w=0&h=RPFs-E3IZvbX3mujRHGY3wX7Mgyzx38iXXu4c0httUI=';\r\n    let playerURL = '', computerURL = '';\r\n    if(userInput === 'Rock'){\r\n        playerURL = rock;\r\n    }\r\n    else if(userInput === 'Paper'){\r\n        playerURL = paper;\r\n    }\r\n    else{\r\n        playerURL = scissors;\r\n    }\r\n    if(computerInput === 'Rock'){\r\n        computerURL = rock;\r\n    }\r\n    else if(computerInput === 'Paper'){\r\n        computerURL = paper;\r\n    }\r\n    else{\r\n        computerURL = scissors;\r\n    }\r\n\r\n    return (\r\n        \r\n\r\n        <div>\r\n            <span className = 'players'> <img style = {{backgroundColor:player}} className = 'image' src = {playerURL} alt = {userInput}/> </span>\r\n            <span className = 'players'> <img className = 'image' src = {versus} alt = 'VS' /> </span>\r\n            <span className = 'players'> <img style = {{backgroundColor:computer}} className = 'image' src = {computerURL} alt = {computerInput} /> </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\nimport './footer.scss';\r\n\r\nconst Footer = ({rock,paper,scissors}) => {\r\n    return(\r\n        <div className = 'footer'>\r\n            Remember!<img className='footerImages' src = {rock} alt = 'Rock'/> beats \r\n            <img className='footerImages' src = {scissors} alt = 'Scissors'/>,  \r\n            <img className='footerImages' src = {scissors} alt = 'Scissors'/> beats \r\n            <img className='footerImages' src = {paper} alt = 'Paper'/> and \r\n            <img className='footerImages' src = {paper} alt = 'Paper'/> beats \r\n            <img className='footerImages' src = {rock} alt = 'Rock'/>!\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Result from '../gameresult/gameresult';\r\nimport Player from '../players/players';\r\nimport Footer from '../footer/footer';\r\nimport './game.scss';\r\n\r\nclass Game extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            winCount: 0,\r\n            lossCount: 0,\r\n            drawCount: 0,\r\n            wins: 0,\r\n            loss: 0,\r\n            draw: 0,\r\n            computerInput: '',\r\n            userInput: '',\r\n            user: '',\r\n            computer: '',\r\n            showPlayers: false,\r\n            madeSelection:false,\r\n            playerBackground : '',\r\n            computerBackground: ''\r\n        }\r\n    }\r\n\r\n    updateInputs = (event) => {\r\n        const moves = ['Rock','Paper','Scissors'];\r\n        const opponentMove = moves[Math.floor(Math.random()*moves.length)];\r\n        this.setState({userInput:event.target.value,computerInput:opponentMove,showPlayers:false,\r\n            madeSelection:true, playerBackground:'',computerBackground:''});\r\n    }\r\n    \r\n    checkWinner = () => {\r\n\r\n        this.setState({showPlayers:true});\r\n        const {userInput, computerInput} = this.state;\r\n        console.log(userInput + \" \" + computerInput);\r\n        let {winCount, lossCount, drawCount} = this.state;\r\n    \r\n        // Winning cases:\r\n        //console.log(\"hi\" + userInput)\r\n        if(userInput === 'Rock' && computerInput === 'Scissors'){\r\n            console.log(\"Win!\")\r\n            winCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'springgreen', \r\n                computerBackground: 'red'}\r\n                );\r\n        }\r\n        if(userInput === 'Scissors' && computerInput === 'Paper'){\r\n            console.log(\"Win!\")\r\n            winCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'springgreen', \r\n                computerBackground: 'red'}\r\n                );\r\n        }\r\n        if(userInput === 'Paper' && computerInput === 'Rock'){\r\n            console.log(\"Win!\")\r\n            winCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'springgreen', \r\n                computerBackground: 'red'}\r\n                );\r\n        }\r\n        //Losing cases:\r\n        if(userInput === 'Rock' && computerInput === 'Paper'){\r\n            console.log(\"Loss\")\r\n            lossCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'red', \r\n                computerBackground: 'springgreen'}\r\n                );\r\n        }\r\n        if(userInput === 'Paper' && computerInput === 'Scissors'){\r\n            console.log(\"Loss\")\r\n            lossCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'red', \r\n                computerBackground: 'springgreen'}\r\n                );\r\n        }\r\n        if(userInput === 'Scissors' && computerInput === 'Rock'){\r\n            console.log(\"Loss\")\r\n            lossCount++;\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'red', \r\n                computerBackground: 'springgreen'}\r\n                );\r\n        }\r\n        //Draw:\r\n        if(userInput === computerInput){\r\n            \r\n            drawCount++;\r\n            console.log(\"Draw! \" + drawCount);\r\n            this.setState(\r\n                {winCount: winCount,\r\n                lossCount: lossCount,\r\n                drawCount:drawCount,\r\n                wins:winCount,\r\n                loss:lossCount,\r\n                draw:drawCount,\r\n                user:userInput,computer:computerInput, playerBackground:'yellow', \r\n                computerBackground: 'yellow'}\r\n                );\r\n        }\r\n        this.setState({user:userInput,computer:computerInput,madeSelection:false});\r\n        console.log(this.state.winCount + \" \" + this.state.lossCount + \" \" + this.state.drawCount);\r\n        \r\n    }\r\n\r\n    render(){\r\n        const {userInput, user, computer, wins,loss,draw,showPlayers,madeSelection,\r\n        playerBackground, computerBackground} = this.state;\r\n        const rock = 'https://cdn130.picsart.com/288074322023201.png?type=webp&to=min&r=640';\r\n        const paper = 'http://assets.stickpng.com/images/580b585b2edbce24c47b2463.png';\r\n        const scissors = 'https://i.pinimg.com/originals/fa/d9/88/fad988caff49e215acccaf3f753a334f.png';\r\n        return(\r\n            \r\n            <div>\r\n                <div>\r\n\r\n                \r\n                <input type = \"image\"\r\n                style = {{backgroundColor:userInput === 'Rock' ? 'blue' : ''}}\r\n                src = {'https://cdn130.picsart.com/288074322023201.png?type=webp&to=min&r=640'} alt = 'Rock' className = \"buttons\" value = \"Rock\" onClick = {this.updateInputs}\r\n                />\r\n                     \r\n                <input type = \"image\"\r\n                style = {{backgroundColor:userInput === 'Paper' ? 'blue' : ''}}\r\n                src = {`http://assets.stickpng.com/images/580b585b2edbce24c47b2463.png`} alt = 'Paper' className = \"buttons\" value = \"Paper\" onClick = {this.updateInputs} />\r\n                <input type = \"image\"\r\n                style = {{backgroundColor:userInput === 'Scissors' ? 'blue' : ''}}\r\n                src = {`https://i.pinimg.com/originals/fa/d9/88/fad988caff49e215acccaf3f753a334f.png`} alt = 'Scissors' className = \"buttons\" value = \"Scissors\" onClick = {this.updateInputs} />\r\n                </div>\r\n                <div>\r\n                {madeSelection?<input type = \"image\" src = {`https://pbskids.org/plumlanding/i/common/playbutton.png`} alt = 'Go!' className = \"buttons\" value = \"Scissors\" onClick = {this.checkWinner} /> :null}\r\n                </div>\r\n\r\n                <div>\r\n                {showPlayers ? <Player userInput = {user} computerInput = {computer} \r\n                player = {playerBackground} computer = {computerBackground}\r\n                />: null}\r\n                </div>\r\n\r\n                <div>\r\n                <Result \r\n                wins = {wins} \r\n                loss = {loss} \r\n                draw = {draw}\r\n                />\r\n               </div>\r\n               <div style = {showPlayers || madeSelection?{marginTop:70}:{marginTop:135}}> \r\n               <Footer rock = {rock} paper = {paper} scissors = {scissors}/>\r\n               </div>\r\n               \r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Game;","import React from 'react';\r\nimport './heading.scss';\r\n\r\nconst Heading = () => {\r\nreturn(\r\n    <div className = 'title'>\r\n        <span style = {{fontSize:40, color:'blue'}}>ROCK, PAPER, SCISSORS!</span>\r\n        <div style = {{margin:30}}>\r\n            Play rock, paper and scissors with the computer! Select one of the below to play!\r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Heading;","import Game from './components/game/game';\r\nimport Heading from './components/heading/heading';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Heading />\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}